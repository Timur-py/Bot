# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏

from aiogram import Bot, Dispatcher, executor, types
import logging
logging.basicConfig(level=logging.INFO)
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext

# –§–∞–π–ª—ã

import config as cfg
from Podderzhka.db import Database
import Podderzhka.functions as fc
from key.kbs import kb_client1, kb_client2, kb_client3, kb_client4, kb_client5, kb_client6
from key.inline import txt_btn, txt_btn1, txt_btn2, txt_btn3, txt_btn4, txt_btn5, txt_btn6, txt_btn7, txt_btn8, txt_btn9
from base import db1_start, create_profile, edit

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

bot = Bot(token=cfg.TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
db = Database('Podderzhka/base.db')
txt = ''
channel = ''
group1_id = cfg.group1
group2_id = cfg.group2



# –ö–ª–∞—Å—Å—ã

class Profile1(StatesGroup):
    Media = State()
    username = State()
    description = State()

class Profile2(StatesGroup):
    photo = State()
    username = State()
    description = State()

class chat(StatesGroup):
    text = State()

async def on_startup(_):
    await db1_start()


@classmethod
async def upload_photo(cls, sleep=None):
    
     await cls.do(cls.UPLOAD_PHOTO, sleep)





# –ö–æ–º–∞–Ω–¥—ã 

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await bot.send_message(message.from_user.id, "üí¨ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —à–∞–±–ª–æ–Ω –º–æ–µ–≥–æ –±–æ—Ç–∞, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ.\n–ù–∞–¥–µ—é—Å—å, –æ–Ω –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è ;)\n \nüìç –ú–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –≤–∞–º –±–æ—Ç–∞, –ø–∏—à–∏:\n@manager_in_telegram (–¢–∏–º—É‚ÇΩ)üí§", reply_markup=kb_client1)
    
    await message.answer('üí¨ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n \n1Ô∏è‚É£ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—Éüìà", –∑–∞—Ç–µ–º –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–π—Å –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è. –ê–¥–º–∏–Ω —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∞–¥–º–∏–Ω –ø—Ä–∏–Ω—è–ª –≤–∞—à—É –∑–∞—è–≤–∫—É, –≤–∞–º –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∞–π—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–±—Ä–∞–ª–∏, —Ä–µ–∫–ª–∞–º–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ. \n \n2Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –Ω–∞—à –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º:)\n \n3Ô∏è‚É£ –ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—åüöÄ" –∏, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å —Ä–µ–∫–ª–∞–º–æ–π –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìí\n \n \nüìç–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏:\n/–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üîç')
    await create_profile(user_id=message.from_user.id)

@dp.message_handler(commands=['–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'])
async def start(message: types.Message):
    await message.answer('üí¨ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n \n1Ô∏è‚É£ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—Éüìà", –∑–∞—Ç–µ–º –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–π—Å –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è. –ê–¥–º–∏–Ω —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∞–¥–º–∏–Ω –ø—Ä–∏–Ω—è–ª –≤–∞—à—É –∑–∞—è–≤–∫—É, –≤–∞–º –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∞–π—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–±—Ä–∞–ª–∏, —Ä–µ–∫–ª–∞–º–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ. \n \n2Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –Ω–∞—à –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º:)\n \n3Ô∏è‚É£ –ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—åüöÄ" –∏, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å —Ä–µ–∫–ª–∞–º–æ–π –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìí\n \n \nüìç–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏:\n/–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üîç')

@dp.message_handler(commands=['–ø–∞–Ω–µ–ª—å'])
async def start(message: types.Message):
    await bot.send_message(message.from_user.id, "–ü–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞‚ôªÔ∏è", reply_markup=kb_client1) 





# –û–±—Ä–∞–±–æ—Ç–∫–∞ keyboard button

@dp.message_handler(lambda message: message.text == '–ö—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—Éüìà', content_types=['text'])
async def ab2(message: types.Message):
    await message.answer('üí¨ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üí∏–ü–†–ê–ô–°üí∏", —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—Éü™ô', reply_markup=kb_client2)

@dp.message_handler(lambda message: message.text == '–ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—åüß©', content_types=['text'])
async def ab3(message: types.Message):
    await message.answer('üí¨ –ü–∞–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞‚ôªÔ∏è\n \nüìç –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –Ω–∞–ø–∏—à–∏—Ç–µ:\n/–ø–∞–Ω–µ–ª—å ‚ÑπÔ∏è', reply_markup=types.ReplyKeyboardRemove())

@dp.message_handler(lambda message: message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüåê', content_types=['text'])
async def ab4(message: types.Message):
    await message.answer('‚ÑπÔ∏è –ü–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∞–º —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö!', reply_markup=txt_btn2) 

@dp.message_handler(lambda message: message.text == '–û–ø–ª–∞—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—Éüí∏', content_types=['text'])
async def ab1(message: types.Message):
    await message.answer(text=txt, reply_markup=txt_btn7)





# pay

# keyboard *PAY*
@dp.message_handler(lambda message: message.text == 'üí∏–ü–†–ê–ô–°üí∏', content_types=['text'])
async def a1(message: types.Message):
    await message.answer('üí¨ *–≠–¢–û –ü–†–ò–ú–ï–† –ü–†–ê–ô–°–ê, –°–ì–ï–ù–ï–†–ò–†–û–í–ê–õ –í –ß–ê–¢ GPT!*\n \nüö® –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:\n \nüåü –£–≤–µ–ª–∏—á—å—Ç–µ –æ—Ö–≤–∞—Ç –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫–ª–∞–º—ã –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ! üöÄ\n \nüíº –ü—Ä–∞–π—Å-–ª–∏—Å—Ç –ø–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é —Ä–µ–∫–ª–∞–º—ã:\n \nüü¢1 –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ: 300‚ÇΩ\n \nüü°1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 3 —á–∞—Å–∞: 399‚ÇΩ\n \nüü†1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 5 —á–∞—Å–æ–≤: 499‚ÇΩ\n \nüî¥1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 24 —á–∞—Å–∞: 999‚ÇΩ\n \nüü£1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 3 –¥–Ω—è: 2499‚ÇΩ\n \n‚ö´Ô∏è–†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ 3 –∫–∞–Ω–∞–ª–∞—Ö –≤ –∑–∞–∫—Ä–µ–ø –Ω–∞ 24 —á–∞—Å–∞: 2999‚ÇΩ\nüî∫ –î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤ –ª–∏—á–∫—É!\n \nüéØ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:\n \n–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞—Ö: +50‚ÇΩ\n–í–∫–ª—é—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ: +50‚ÇΩ\n–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: +100‚ÇΩ\nüí∞ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n \n–ó–∞–∫–∞–∂–∏ –ø–∞–∫–µ—Ç –∏–∑ 5 –ø–æ—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 10%!\n–ó–∞–∫–∞–∂–∏ –ø–∞–∫–µ—Ç –∏–∑ 10 –ø–æ—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 30%!\nüìä –ü–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö!\n \nüìç –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏–±—ã–ª—å —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Å –Ω–∞—à–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–æ–º! üåà‚ú®', reply_markup=txt_btn1)


# state *PAY*
@dp.message_handler(lambda message: message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—èü§µüèº', content_types=['text'])
async def b1(message: types.Message) -> None:
    await message.answer('üí¨ –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æüåá', reply_markup=kb_client4)
    
    await Profile1.Media.set()

@dp.message_handler(content_types=['video', 'photo'], state=Profile1.Media)
async def c1(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['Media'] = message.photo[0].file_id
    
    await message.reply('üí¨ –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π username –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: @manager_in_telegram‚ôªÔ∏è')
    await Profile1.next()

@dp.message_handler(lambda message: not message.photo or not message.video, state=Profile1.Media)
async def b2(message: types.Message, state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        await message.answer('–ú–µ–Ω—é‚ôªÔ∏è', reply_markup=kb_client1)
        await state.finish()
    else:
        await message.reply('üí¨ –≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ!')

@dp.message_handler(state=Profile1.username)
async def c2(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['username'] = message.text

    await message.reply('üí¨ –°–ø–∞—Å–∏–±–æ! –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞‚ôªÔ∏è', reply_markup=types.ReplyKeyboardRemove())
    await Profile1.next()

@dp.message_handler(lambda message: not message.text.startswith('@'), state=Profile1.username)
async def c2(message: types.Message, state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        await message.answer('–ú–µ–Ω—é‚ôªÔ∏è', reply_markup=kb_client1)
        await state.finish()
    else:
        await message.reply('üí¨ –≠—Ç–æ –Ω–µ username!')

@dp.message_handler(state=Profile1.description)
async def c3(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text
        
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=data['Media'], caption=f"{data['username']}\n{data['description']}\n \n{txt}", reply_markup=txt_btn8)
        await bot.send_photo(chat_id=group1_id, photo=data['Media'], caption=f"{data['username']}\n{data['description']}\n \n{txt}", reply_markup=txt_btn9)
    await state.finish()


# callback *PAY*
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('pay'))
async def inline_pay(callback: types.CallbackQuery, state: FSMContext):
    if callback.data == 'pay-2':
        await bot.send_message(chat_id=callback.from_user.id, text='üí¨ –ó–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ‚ôªÔ∏è', reply_markup=kb_client2)
        await callback.message.delete()
    elif callback.data == 'pay-3':
        await bot.send_message(chat_id=callback.from_user.id, text='üí¨ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—Éüìù\n \nüìç –ù–µ –æ—Ç—á–∏—â–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é, –∞–¥–º–∏–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–æ—Ç–µ!', reply_markup=kb_client1)
        await callback.message.delete()





# –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å

@dp.message_handler(lambda message: message.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—åüöÄ', content_types=['text'])
async def news1(message: types.Message) -> None:
    await message.reply('üí¨ –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æüåá', reply_markup=kb_client4)
    
    await Profile2.photo.set()

@dp.message_handler(lambda message: not message.photo, state=Profile2.photo)
async def news1(message: types.Message, state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        await message.answer('–ú–µ–Ω—é‚ôªÔ∏è', reply_markup=kb_client1)
        await state.finish()
    else:
        await message.reply('üí¨ –≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

@dp.message_handler(content_types=['photo'], state=Profile2.photo)
async def news1(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
    
    await message.reply('üí¨ –ê —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π username –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: @manager_in_telegram\n \nüìç–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º–∏, –Ω–∞–ø–∏—à–∏—Ç–µ: @anonymousü•∑üèª')
    await Profile2.next()



@dp.message_handler(lambda message: not message.text.startswith('@'), state=Profile2.username)
async def news1(message: types.Message, state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        await message.answer('–ú–µ–Ω—é‚ôªÔ∏è', reply_markup=kb_client1)
        await state.finish()
    else:
        await message.reply('üí¨ –≠—Ç–æ –Ω–µ username!')

@dp.message_handler(state=Profile2.username)
async def news1(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['username'] = message.text

    await message.reply('üí¨ –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç(–Ω–æ–≤–æ—Å—Ç—å, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ç–¥.)‚ôªÔ∏è', reply_markup=types.ReplyKeyboardRemove())
    await Profile2.next()

@dp.message_handler(state=Profile2.description)
async def news1(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text
        await bot.send_photo(chat_id=message.from_user.id,
                             photo=data['photo'], caption=f"{data['username']}\n{data['description']}")
        await bot.send_message(chat_id=message.from_user.id, text='üí¨ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –Ω–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞üìù', reply_markup=kb_client1)
        global group2_id
        await bot.send_photo(chat_id=group2_id, photo=data['photo'], caption=f"{data['username']}\n{data['description']}")
    await state.finish()





# –ü–æ–¥–¥–µ—Ä–∂–∫–∞

@dp.message_handler(lambda message: message.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞‚öô', content_types=['text'])
async def mess(message: types.Message):
    await message.answer('üí¨ –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –æ—Ç–Ω–æ—Å—è—â–µ–π—Å—è –∫ –±–æ—Ç—É, –∫ –æ–ø–ª–∞—Ç–µ –∏ —Ç–¥., —Å—Ä–∞–∑—É –æ—Ç–≤–µ—Ç–∏–º‚úèÔ∏è', reply_markup=kb_client6)
    await chat.text.set()

@dp.message_handler(state=chat.text)
async def supp(message: types.Message, state: FSMContext):
    if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–∏–∞–ª–æ–≥‚òéÔ∏è':
        await bot.send_message(chat_id=message.from_user.id, text='üí¨ –î–∏–∞–ª–æ–≥ –∑–∞–∫–æ–Ω—á–µ–Ω‚ùå', reply_markup=kb_client1)
        await state.finish()
    else:
        async with state.proxy() as data:
            data['text'] = message.text
    
        answer_id = fc.recognize_question(message.text, db.get_questions())
        await message.answer(db.get_answer(answer_id))
        await chat.text.set()

        



# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback (Inline keyboard)

@dp.callback_query_handler(text='a')
async def inline(callback: types.CallbackQuery) -> None:
    await callback.message.edit_text('üí¨ *–≠–¢–û –ü–†–ò–ú–ï–† –ü–†–ê–ô–°–ê, –°–ì–ï–ù–ï–†–ò–†–û–í–ê–õ –í –ß–ê–¢ GPT!*\n \nüö® –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:\n \nüåü –£–≤–µ–ª–∏—á—å—Ç–µ –æ—Ö–≤–∞—Ç –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫–ª–∞–º—ã –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ! üöÄ\n \nüíº –ü—Ä–∞–π—Å-–ª–∏—Å—Ç –ø–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—é —Ä–µ–∫–ª–∞–º—ã:\n \nüü¢1 –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ: 300‚ÇΩ\n \nüü°1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 3 —á–∞—Å–∞: 399‚ÇΩ\n \nüü†1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 5 —á–∞—Å–æ–≤: 499‚ÇΩ\n \nüî¥1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 24 —á–∞—Å–∞: 999‚ÇΩ\n \nüü£1 –ø–æ—Å—Ç –≤ –∑–∞–∫—Ä–µ–ø–µ –Ω–∞ 3 –¥–Ω—è: 2499‚ÇΩ\n \n‚ö´Ô∏è–†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ 3 –∫–∞–Ω–∞–ª–∞—Ö –≤ –∑–∞–∫—Ä–µ–ø –Ω–∞ 24 —á–∞—Å–∞: 2999‚ÇΩ\nüî∫ –î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤ –ª–∏—á–∫—É!\n \nüéØ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:\n \n–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞—Ö: +50‚ÇΩ\n–í–∫–ª—é—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ: +50‚ÇΩ\n–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º: +100‚ÇΩ\nüí∞ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n \n–ó–∞–∫–∞–∂–∏ –ø–∞–∫–µ—Ç –∏–∑ 5 –ø–æ—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 10%!\n–ó–∞–∫–∞–∂–∏ –ø–∞–∫–µ—Ç –∏–∑ 10 –ø–æ—Å—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É 30%!\nüìä –ü–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö!\n \nüìç –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏–±—ã–ª—å —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ —Å –Ω–∞—à–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–æ–º! üåà‚ú®', reply_markup=txt_btn1)

@dp.callback_query_handler(text='aa')
async def del_inline(callback: types.CallbackQuery) -> None:
    await callback.message.delete()
    await bot.send_message(chat_id=callback.from_user.id, text='üí¨ –î–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤–∞—à–µ–π —Ä–µ–∫–ª–∞–º—ã –≤ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ: "–¢–ì–ö", –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüíª\n \nüõé –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—èü§µüèº"', reply_markup=kb_client3)



@dp.callback_query_handler(lambda callback: callback.data.startswith('answer'))
async def pay_choice(callback: types.CallbackQuery):
    if callback.data == 'answer-1':
        await bot.send_message(chat_id=callback.from_user.id, text='üí¨ –ê–¥–º–∏–Ω –ø—Ä–∏–Ω—è–ª –≤–∞—à—É –∑–∞—è–≤–∫—É! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∞—à –ø–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –±—ã–ª –≤—ã–ª–æ–∂–µ–Ω –≤ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª: "–¢–ì–ö", –æ–ø–ª–∞—Ç–∏—Ç–µ —É—Å–ª—É–≥—Éü§ù', reply_markup=kb_client5)
        await callback.message.edit_reply_markup(txt_btn)
        global group1_id
    elif callback.data == 'answer-2':
        await bot.send_message(chat_id=callback.from_user.id, text='üí¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –∞–¥–º–∏–Ω –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à—É –∑–∞—è–≤–∫—É. –ù–∞–≤–µ—Ä–Ω–æ–µ, –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∫–∞–Ω–∞–ª–∞. –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏ –∞–¥–º–∏–Ω—É: @manager_in_telegramüëî')
        await callback.message.delete()



@dp.callback_query_handler()
async def callback1(callback_quevery: types.CallbackQuery):
    if callback_quevery.data == '1':
        await bot.send_message(chat_id=callback_quevery.from_user.id, text='üí¨ –ú—ã, –Ω–µ–±–æ–ª—å—à–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–≤.\n \n‚ÑπÔ∏è –í–ª–∞–¥–µ–µ–º —è–∑—ã–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: Python, JavaScript, HTML, Css –∏ –¥—Ä. –ó–∞–Ω–∏–º–∞–µ–º—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–∞–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –±–æ—Ç–æ–≤, —Ç–∞–∫ –∏ –±–æ—Ç–æ–≤ —Å WEB –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º. –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Aiogram, pyTelegramBotAPI.\n \nüìç –°–î–ï–õ–ê–ï–ú –£–î–û–ë–ù–û–ì–û –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢–ê, –ö–û–¢–û–†–´–ô –£–ü–†–û–°–¢–ò–¢ –í–ê–ú –ñ–ò–ó–ù–¨!ü™ê')
    elif callback_quevery.data == '2':
        await bot.send_message(chat_id=callback_quevery.from_user.id, text='üí¨ –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüõú')
    elif callback_quevery.data == '3':
        await bot.send_message(chat_id=callback_quevery.from_user.id, text='üí¨ –¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüõú')
    
    global txt    
    if callback_quevery.data == 'data-1':
        await callback_quevery.message.edit_text(text='üü¢–£—Å–ª—É–≥–∞ ‚Ññ1 - –†–µ–∫–ª–∞–º–∞ 1 –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ‚ö°Ô∏è\n–¶–µ–Ω–∞ - 300‚ÇΩüíµ', reply_markup=txt_btn6)
        txt = 'üü¢–£—Å–ª—É–≥–∞ ‚Ññ1 - –†–µ–∫–ª–∞–º–∞ 1 –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ‚ö°Ô∏è\n–¶–µ–Ω–∞ - 300‚ÇΩüíµ'
    elif callback_quevery.data == 'data-2':
        await callback_quevery.message.edit_text(text='üü°–£—Å–ª—É–≥–∞ ‚Ññ2 - –†–µ–∫–ª–∞–º–∞ 3 —á –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 399‚ÇΩ üíµ', reply_markup=txt_btn6)
        txt = 'üü°–£—Å–ª—É–≥–∞ ‚Ññ2 - –†–µ–∫–ª–∞–º–∞ 3 —á–∞—Å–∞ –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 399‚ÇΩüíµ'
    elif callback_quevery.data == 'data-3':
        await callback_quevery.message.edit_text(text='üü†–£—Å–ª—É–≥–∞ ‚Ññ3 - –†–µ–∫–ª–∞–º–∞ 5 —á –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 499‚ÇΩ üíµ', reply_markup=txt_btn6)
        txt = 'üü†–£—Å–ª—É–≥–∞ ‚Ññ3 - –†–µ–∫–ª–∞–º–∞ 5 —á–∞—Å–æ–≤ –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 499‚ÇΩüíµ'
    elif callback_quevery.data == 'data-4':
        await callback_quevery.message.edit_text(text='üî¥–£—Å–ª—É–≥–∞ ‚Ññ4 - –†–µ–∫–ª–∞–º–∞ 24 —á –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 999‚ÇΩ üíµ', reply_markup=txt_btn6)
        txt = 'üî¥–£—Å–ª—É–≥–∞ ‚Ññ4 - –†–µ–∫–ª–∞–º–∞ 24 —á–∞—Å–∞ –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 999‚ÇΩüíµ'
    elif callback_quevery.data == 'data-5':
        await callback_quevery.message.edit_text(text='üü£–£—Å–ª—É–≥–∞ ‚Ññ5 - –†–µ–∫–ª–∞–º–∞ 3 –¥–Ω –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 2499‚ÇΩ üíµ', reply_markup=txt_btn6)
        txt = 'üü£–£—Å–ª—É–≥–∞ ‚Ññ5 - –†–µ–∫–ª–∞–º–∞ 3 –¥–Ω—è –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 2499‚ÇΩüíµ'
    elif callback_quevery.data == 'data-6':
        await callback_quevery.message.edit_text(text='‚ö´Ô∏è–£—Å–ª—É–≥–∞ ‚Ññ6 - –ú–ï–ì–ê-–†–µ–∫–ª–∞–º–∞ 24 —á–∞—Å–∞ –≤ 3 –∫–∞–Ω–∞–ª–∞—Ö –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 2999‚ÇΩüíµ', reply_markup=txt_btn6)
        txt = '‚ö´Ô∏è–£—Å–ª—É–≥–∞ ‚Ññ6 - –ú–ï–ì–ê-–†–µ–∫–ª–∞–º–∞ 24 —á–∞—Å–∞ –≤ 3 –∫–∞–Ω–∞–ª–∞—Ö –≤ –¢–û–ü–ï‚ö°Ô∏è\n–¶–µ–Ω–∞ - 2999‚ÇΩüíµ'
    




# –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ë–æ—Ç–∞

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True,
                           on_startup=on_startup)